name: test-variable-passing-across-jobs
on:
  workflow_dispatch:
    inputs:
      re-run-status:
        required: true
        type: choice
        options:
          - success
          - fail

jobs:
  Django-test:
    name: Django-test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        job: [0, 1, 2, 3, 4, 5]  # Matrix size is 6

    outputs:
      total-jobs: ${{ steps.see-output-in-next-step.outputs.result }}

    steps:
      - name: Rerun failed tests
        id: django-failed-tests-rerun
        env:
          JOB: ${{ matrix.job }}
        continue-on-error: true
        run: |
          if [ "${{ github.event.inputs.re-run-status }}" = "fail" ]; then
            echo "test-result=fail" >> $GITHUB_ENV
            exit 1
          else
            echo "test-result=success" >> $GITHUB_ENV
          fi

      - name: Set step output
        id: see-output-in-next-step
        continue-on-error: true
        run: |
          echo "::set-output name=result::${{ strategy.job-total }}"

  PublishTestResults:
    name: Publish unit test results
    needs: Django-test
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Display the test result
        run: |
          echo "Total jobs: ${{ needs.Django-test.outputs.total-jobs}}"
      - name: create directories for a specified number
        run: |
          start = 0
          end = ${{ needs.Django-test.outputs.total-jobs}}
          for ((i=start; i<end; i++)); do
              dir_name="test-$i"
              mkdir -p "$dir_name"
              echo "Created directory: $dir_name"
          done
      - name: Count directories
        run: |
          # Define the pattern to match directories
          pattern="test-[0-5]"

          # Count directories matching the pattern
          count=$(find . -maxdepth 1 -type d -name "$pattern" | wc -l)

          # Output the count
          echo "Number of directories matching the pattern '$pattern': $count"

          # Optionally, you can set this count as an output if needed
          echo "::set-output name=directory_count::$count"
